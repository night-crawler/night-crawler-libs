var pages = [{"name":"class HashExecutorCompletionService<T>(executor: Executor, completionQueue: BlockingQueue<Future<T>>) : ExecutorCompletionService<T> ","description":"nightcrawler.concurrent.HashExecutorCompletionService","location":"concurrent/nightcrawler.concurrent/-hash-executor-completion-service/index.html","searchKeys":["HashExecutorCompletionService","class HashExecutorCompletionService<T>(executor: Executor, completionQueue: BlockingQueue<Future<T>>) : ExecutorCompletionService<T> "]},{"name":"fun <T> HashExecutorCompletionService(executor: Executor, completionQueue: BlockingQueue<Future<T>> = LinkedBlockingQueue())","description":"nightcrawler.concurrent.HashExecutorCompletionService.HashExecutorCompletionService","location":"concurrent/nightcrawler.concurrent/-hash-executor-completion-service/-hash-executor-completion-service.html","searchKeys":["HashExecutorCompletionService","fun <T> HashExecutorCompletionService(executor: Executor, completionQueue: BlockingQueue<Future<T>> = LinkedBlockingQueue())"]},{"name":"class HashExecutorService(pool: Collection<ExecutorService>, bucketMapper: Function<Any, Int>) : ExecutorService","description":"nightcrawler.concurrent.HashExecutorService","location":"concurrent/nightcrawler.concurrent/-hash-executor-service/index.html","searchKeys":["HashExecutorService","class HashExecutorService(pool: Collection<ExecutorService>, bucketMapper: Function<Any, Int>) : ExecutorService"]},{"name":"fun HashExecutorService(pool: Collection<ExecutorService>, bucketMapper: Function<Any, Int>)","description":"nightcrawler.concurrent.HashExecutorService.HashExecutorService","location":"concurrent/nightcrawler.concurrent/-hash-executor-service/-hash-executor-service.html","searchKeys":["HashExecutorService","fun HashExecutorService(pool: Collection<ExecutorService>, bucketMapper: Function<Any, Int>)"]},{"name":"object Companion","description":"nightcrawler.concurrent.HashExecutorService.Companion","location":"concurrent/nightcrawler.concurrent/-hash-executor-service/-companion/index.html","searchKeys":["Companion","object Companion"]},{"name":"fun of(poolSize: Int, numThreadsPerPool: Int): HashExecutorService","description":"nightcrawler.concurrent.HashExecutorService.Companion.of","location":"concurrent/nightcrawler.concurrent/-hash-executor-service/-companion/of.html","searchKeys":["of","fun of(poolSize: Int, numThreadsPerPool: Int): HashExecutorService"]},{"name":"fun singleThreaded(poolSize: Int): HashExecutorService","description":"nightcrawler.concurrent.HashExecutorService.Companion.singleThreaded","location":"concurrent/nightcrawler.concurrent/-hash-executor-service/-companion/single-threaded.html","searchKeys":["singleThreaded","fun singleThreaded(poolSize: Int): HashExecutorService"]},{"name":"open override fun awaitTermination(timeout: Long, unit: TimeUnit): Boolean","description":"nightcrawler.concurrent.HashExecutorService.awaitTermination","location":"concurrent/nightcrawler.concurrent/-hash-executor-service/await-termination.html","searchKeys":["awaitTermination","open override fun awaitTermination(timeout: Long, unit: TimeUnit): Boolean"]},{"name":"open override fun execute(command: Runnable)","description":"nightcrawler.concurrent.HashExecutorService.execute","location":"concurrent/nightcrawler.concurrent/-hash-executor-service/execute.html","searchKeys":["execute","open override fun execute(command: Runnable)"]},{"name":"open override fun isShutdown(): Boolean","description":"nightcrawler.concurrent.HashExecutorService.isShutdown","location":"concurrent/nightcrawler.concurrent/-hash-executor-service/is-shutdown.html","searchKeys":["isShutdown","open override fun isShutdown(): Boolean"]},{"name":"open override fun isTerminated(): Boolean","description":"nightcrawler.concurrent.HashExecutorService.isTerminated","location":"concurrent/nightcrawler.concurrent/-hash-executor-service/is-terminated.html","searchKeys":["isTerminated","open override fun isTerminated(): Boolean"]},{"name":"open override fun shutdown()","description":"nightcrawler.concurrent.HashExecutorService.shutdown","location":"concurrent/nightcrawler.concurrent/-hash-executor-service/shutdown.html","searchKeys":["shutdown","open override fun shutdown()"]},{"name":"open override fun shutdownNow(): List<Runnable>","description":"nightcrawler.concurrent.HashExecutorService.shutdownNow","location":"concurrent/nightcrawler.concurrent/-hash-executor-service/shutdown-now.html","searchKeys":["shutdownNow","open override fun shutdownNow(): List<Runnable>"]},{"name":"fun <T> List<Future<T>>.blockWait()","description":"nightcrawler.concurrent.blockWait","location":"concurrent/nightcrawler.concurrent/block-wait.html","searchKeys":["blockWait","fun <T> List<Future<T>>.blockWait()"]},{"name":"fun <T> List<Future<T>>.cancelAll(startFrom: Int = 0)","description":"nightcrawler.concurrent.cancelAll","location":"concurrent/nightcrawler.concurrent/cancel-all.html","searchKeys":["cancelAll","fun <T> List<Future<T>>.cancelAll(startFrom: Int = 0)"]},{"name":"class HashExecutorServiceException(throwables: List<Throwable>) : RuntimeException","description":"nightcrawler.concurrent.exception.HashExecutorServiceException","location":"concurrent/nightcrawler.concurrent.exception/-hash-executor-service-exception/index.html","searchKeys":["HashExecutorServiceException","class HashExecutorServiceException(throwables: List<Throwable>) : RuntimeException"]},{"name":"fun HashExecutorServiceException(throwables: List<Throwable>)","description":"nightcrawler.concurrent.exception.HashExecutorServiceException.HashExecutorServiceException","location":"concurrent/nightcrawler.concurrent.exception/-hash-executor-service-exception/-hash-executor-service-exception.html","searchKeys":["HashExecutorServiceException","fun HashExecutorServiceException(throwables: List<Throwable>)"]},{"name":"open val cause: Throwable?","description":"nightcrawler.concurrent.exception.HashExecutorServiceException.cause","location":"concurrent/nightcrawler.concurrent.exception/-hash-executor-service-exception/cause.html","searchKeys":["cause","open val cause: Throwable?"]},{"name":"open val cause: Throwable?","description":"nightcrawler.concurrent.exception.HashExecutorServiceInterruptedException.cause","location":"concurrent/nightcrawler.concurrent.exception/-hash-executor-service-interrupted-exception/cause.html","searchKeys":["cause","open val cause: Throwable?"]},{"name":"open val message: String?","description":"nightcrawler.concurrent.exception.HashExecutorServiceException.message","location":"concurrent/nightcrawler.concurrent.exception/-hash-executor-service-exception/message.html","searchKeys":["message","open val message: String?"]},{"name":"open val message: String?","description":"nightcrawler.concurrent.exception.HashExecutorServiceInterruptedException.message","location":"concurrent/nightcrawler.concurrent.exception/-hash-executor-service-interrupted-exception/message.html","searchKeys":["message","open val message: String?"]},{"name":"val throwables: List<Throwable>","description":"nightcrawler.concurrent.exception.HashExecutorServiceException.throwables","location":"concurrent/nightcrawler.concurrent.exception/-hash-executor-service-exception/throwables.html","searchKeys":["throwables","val throwables: List<Throwable>"]},{"name":"val throwables: List<Throwable>","description":"nightcrawler.concurrent.exception.HashExecutorServiceInterruptedException.throwables","location":"concurrent/nightcrawler.concurrent.exception/-hash-executor-service-interrupted-exception/throwables.html","searchKeys":["throwables","val throwables: List<Throwable>"]},{"name":"class HashExecutorServiceInterruptedException(throwables: List<Throwable>) : InterruptedException","description":"nightcrawler.concurrent.exception.HashExecutorServiceInterruptedException","location":"concurrent/nightcrawler.concurrent.exception/-hash-executor-service-interrupted-exception/index.html","searchKeys":["HashExecutorServiceInterruptedException","class HashExecutorServiceInterruptedException(throwables: List<Throwable>) : InterruptedException"]},{"name":"fun HashExecutorServiceInterruptedException(throwables: List<Throwable>)","description":"nightcrawler.concurrent.exception.HashExecutorServiceInterruptedException.HashExecutorServiceInterruptedException","location":"concurrent/nightcrawler.concurrent.exception/-hash-executor-service-interrupted-exception/-hash-executor-service-interrupted-exception.html","searchKeys":["HashExecutorServiceInterruptedException","fun HashExecutorServiceInterruptedException(throwables: List<Throwable>)"]}]
