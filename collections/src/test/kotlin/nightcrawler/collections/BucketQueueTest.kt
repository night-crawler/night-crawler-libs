/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package nightcrawler.collections

import java.time.Instant
import kotlin.test.Test
import kotlin.test.assertEquals

class BucketQueueTest {
    @Test
    fun testBucketQueue() {
        testAddWithDefault(BucketQueue())
        testAddWithSet(BucketQueue() { mutableSetOf() })
        testPop(BucketQueue())
    }

    @Test
    fun testConcurrentBucketQueue() {
        testAddWithDefault(ConcurrentBucketQueue())
        testAddWithSet(ConcurrentBucketQueue(BucketQueue() { mutableSetOf() }))
        testPop(ConcurrentBucketQueue())
    }

    private fun testAddWithDefault(queue: IBucketQueue<Long, String>) {
        queue.add(1, "a")
        assertEquals(1, queue.size)
        assertEquals(1, queue.numBuckets)

        queue.add(1, "a")
        assertEquals(2, queue.size)
        assertEquals(1, queue.numBuckets)

        queue.addAll(1, listOf())
        assertEquals(2, queue.size)
        assertEquals(1, queue.numBuckets)

        queue.addAll(1, listOf("a", "a"))
        assertEquals(4, queue.size)
        assertEquals(1, queue.numBuckets)

        queue.addAll(2, listOf("a", "a"))
        assertEquals(6, queue.size)
        assertEquals(2, queue.numBuckets)

        queue.addAll(3, listOf())
        assertEquals(6, queue.size)
        assertEquals(2, queue.numBuckets)
    }

    private fun testAddWithSet(queue: IBucketQueue<Long, String>) {
        queue.add(1, "a")
        assertEquals(1, queue.size)

        queue.add(1, "a")
        assertEquals(1, queue.size)

        queue.addAll(1, listOf())
        assertEquals(1, queue.size)

        queue.addAll(1, listOf("a", "a"))
        assertEquals(1, queue.size)

        queue.addAll(1, listOf("a", "b", "c"))
        assertEquals(3, queue.size)

        queue.addAll(2, listOf("a", "b", "c"))
        assertEquals(6, queue.size)
    }

    private fun testPop(queue: IBucketQueue<Instant, String>) {
        val (t1, t2, t3) = Triple(
            Instant.ofEpochMilli(0),
            Instant.ofEpochMilli(100),
            Instant.ofEpochMilli(200)
        )
        queue.add(t1, "a")
        queue.addAll(t2, listOf("a"))
        queue.addAll(t3, listOf("a", "b", "c"))

        assertEquals(listOf("a", "a"), queue.pop(t2))
        assertEquals(1, queue.numBuckets)
        assertEquals(3, queue.size)

        assertEquals(listOf("a", "b", "c"), queue.pop(t3))
        assertEquals(0, queue.numBuckets)
        assertEquals(0, queue.size)
    }
}
